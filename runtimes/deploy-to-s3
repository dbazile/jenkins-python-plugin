#!/usr/bin/env python3

import argparse
import datetime
import os
import subprocess


START_TIME        = datetime.datetime.now()

STAGING_ROOT      = os.path.abspath(os.path.join(os.path.dirname(__file__), '.staging'))


def main():
    ensure_aws_cli()

    enter_staging_root()

    parser = argparse.ArgumentParser()
    parser.add_argument('bucket')
    opts = parser.parse_args()

    bucket_name = os.path.basename(opts.bucket)

    print_message('preparing deployment to s3://%s', bucket_name, prefix='<<<', pad='before')

    print_message('deploying', prefix='>>>', pad='after')
    deploy(bucket_name)

    print_message('all runtimes deployed (elapsed=%s)', time_elapsed(), prefix='>>>', pad='both')


def deploy(bucket_name: str):
    execute_subprocess(STAGING_ROOT, [
        'aws',
        's3',
        'sync',
        '--delete',
        '.',
        's3://{}'.format(bucket_name),
    ])


def ensure_aws_cli():
    try:
        execute_subprocess(STAGING_ROOT, ['aws', '--version'])
    except FileNotFoundError:
        fail('cannot continue; aws CLI was not found in your PATH')


def enter_staging_root():
    os.chdir(STAGING_ROOT)


def execute_subprocess(cwd: str, command_args: list, border: str = 'both'):
    if border in ('before', 'both'):
        print('=' * 80)

    print('\033[31m+ {}\033[0m'.format(' '.join(command_args)))
    exit_code = subprocess.call(args=command_args, cwd=cwd)
    if exit_code != 0:
        exit(exit_code)

    if border in ('after', 'both'):
        print('=' * 80)


def fail(*args, **kwargs):
    print_message(*args, **kwargs, prefix='!!!', pad='both')
    exit(1)


def print_message(message: str, *components, pad: str= '', prefix: str = '   '):
    if pad in ('before', 'both'):
        print()

    print('  {}  {}'.format(prefix, message % (components)))

    if pad in ('after', 'both'):
        print()


def time_elapsed():
    return str(datetime.datetime.now() - START_TIME)


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        exit(1)
